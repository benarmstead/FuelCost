# This is a basic workflow to help you get started with Actions
name: CD

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    tags:
      - "1.*" # on every version tag will build a new android artifact.
    branches:
      [ android_ci ]
jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: "12.x"
      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: "stable"

      - name: Pub Get Packages
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --split-per-abi --release

      - name: Build APPBUNDLE
        run: flutter build appbundle --release
        
      - name: Sign APKs
        env:
          # If you want to generate a keystore secret, run these commands:
          # keytool -genkey -v -keystore apksign.keystore -alias apksign -keyalg RSA -keysize 4096
          # cat apksign.keystore | base64
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEYSTORE_PASS: ${{ secrets.KEYSTORE_PASS }}
        run: |
          echo "${KEYSTORE_BASE64}" | base64 -d > apksign.keystore
          for apk in app/build/outputs/apk/release/*.apk; do
          ${ANDROID_HOME}/build-tools/30.0.2/apksigner sign --ks apksign.keystore --ks-pass env:KEYSTORE_PASS --out "FuelCost.apk" "${apk}"
          echo "$(sha256sum FuelCost.apk)"
          done
          rm apksign.keystore
          
      - name: Create Github Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/apk/release/FuelCost.apk"
          token: ${{ secrets.GITHUB_TOKEN }}
